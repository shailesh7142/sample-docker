apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: azure-sample-kubernetes
spec:
  replicas: 2
  template:
    metadata:
      labels: # labels to select/identify the deployment
        app: azure-sample-kubernetes
    spec:     # pod spec                 
      containers:
      - name: azure-sample-kubernetes
        image: dockdem.azurecr.io/skydemo    # image we pushed
        containerPort: 3000
        




# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: azure-vote-back
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: azure-vote-back
#   template:
#     metadata:
#       labels:
#         app: azure-vote-back
#     spec:
#       nodeSelector:
#         "beta.kubernetes.io/os": linux
#       containers:
#       - name: azure-vote-back
#         image: redis
#         ports:
#         - containerPort: 6379
#           name: redis
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: azure-vote-back
# spec:
#   ports:
#   - port: 6379
#   selector:
#     app: azure-vote-back
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: azure-vote-front
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: azure-vote-front
#   strategy:
#     rollingUpdate:
#       maxSurge: 1
#       maxUnavailable: 1
#   minReadySeconds: 5 
#   template:
#     metadata:
#       labels:
#         app: azure-vote-front
#     spec:
#       nodeSelector:
#         "beta.kubernetes.io/os": linux
#       containers:
#       - name: azure-vote-front
#         image: microsoft/azure-vote-front:v1
#         ports:
#         - containerPort: 80
#         resources:
#           requests:
#             cpu: 250m
#           limits:
#             cpu: 500m
#         env:
#         - name: REDIS
#           value: "azure-vote-back"
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: azure-vote-front
# spec:
#   type: LoadBalancer
#   ports:
#   - port: 80
#   selector:
#     app: azure-vote-front